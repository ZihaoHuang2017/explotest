#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import argparse
import ast
import sys
from pathlib import Path

from IPython.terminal.interactiveshell import TerminalInteractiveShell

from explotest.explotest import transform_tests_outer

if __name__ == '__main__':
    ipython = TerminalInteractiveShell.instance()
    parser = argparse.ArgumentParser()
    parser.add_argument("input_filename", nargs=1)
    parser.add_argument("-f", dest="filename", help="""
        FILENAME: instead of printing the output to the screen, redirect
        it to the given file.  The file is always overwritten, though *when
        it can*, IPython asks for confirmation first. In particular, running
        the command 'history -f FILENAME' from the IPython Notebook
        interface will replace FILENAME even if it already exists *without*
        confirmation.
        """)
    parser.add_argument("-v",
                        dest="verbose",
                        action="store_true",
                        help="""
        VERBOSE: If set to True, then the program will try to expand the test case into
        individual assertions; if False, then the whole list/dict/tuple will be asserted at once.
        """)
    parser.add_argument("-d",
                        dest="dest",
                        default=f"./test_resources",
                        help="""
        The location that the pickled arguments will go.
        """,)
    args = parser.parse_args()
    if not Path(args.input_filename).exists():
        print("This file does not exist!")
        sys.exit(1)
    infile = open(Path(args.input_filename), "r", encoding="utf-8")
    statements: list[ast.stmt] = ast.parse(infile.read()).body
    for statement in statements:
        ipython.run_cell(ast.unparse(statement), store_history=True)
    transform_tests_outer(ipython, args.filename, args.verbose, args.dest)
